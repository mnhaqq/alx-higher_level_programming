>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [
...         [5, 5, 5],
...         [5, 5, 5]
... ]

>>> matrix_divided(matrix, 7)
[[0.71, 0.71, 0.71], [0.71, 0.71, 0.71]]

>>> matrix
[[5, 5, 5], [5, 5, 5]]

>>> matrix = [
...     [1, -2.2, 3, 4.4, 5],
...     [-6.6, 7.00, 8, 9.999, 10]
... ]

>>> matrix_divided(matrix, 3)
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

>>> matrix = None
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = "string"
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[]]
>>> matrix_divided(matrix, 3)
[[]]

>>> matrix = [1,2,3,4]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [1, 2, 3, 4],
...     [5, 6, 7]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, "string")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
