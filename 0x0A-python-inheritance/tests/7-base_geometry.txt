>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("width", 1)

>>> bg.integer_validator("width", 12345)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("none", None)
Traceback (most recent call last):
...
TypeError: none must be an integer

>>> bg.integer_validator("list", [1, 2, 3, 4])
Traceback (most recent call last):
...
TypeError: list must be an integer

>>> bg.integer_validator("tuple", (1, ))
Traceback (most recent call last):
...
TypeError: tuple must be an integer

>>> bg.integer_validator("set", {9, 10})
Traceback (most recent call last):
...
TypeError: set must be an integer

>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer

>>> bg.integer_validator("float", 1.5)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("integer")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("integer", 1, 2)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given
